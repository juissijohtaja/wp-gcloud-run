on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]
    types: [opened, synchronize]

name: Build and Deploy a Container
env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  SERVICE: jkwordpress
  REGION: europe-north1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCLOUD_AUTH }}
        export_default_credentials: true  # Set to true to authenticate the Cloud Run action

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: ${{ env.SERVICE }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
        region: ${{ env.REGION }}
        credentials: ${{ secrets.GCLOUD_AUTH }}
        env_vars: DB_NAME=wordpress,DB_USER=root,DB_PASSWORD=password,DB_HOST=:/cloudsql/jkwordpress:europe-north1:wordpress

    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}    

# jobs:
#   build_and_publish_gcr:
#     runs-on: ubuntu-latest
#     steps:
#     - id: deploy
#       uses: google-github-actions/deploy-cloudrun@main
#       with:
#         image: gcr.io/jkwordpress/jkwordpress
#         service: jkwordpress
#         credentials: ${{ secrets.GCLOUD_AUTH }}
#         env_vars: DB_NAME=wordpress,DB_USER=root,DB_PASSWORD=password,DB_HOST=:/cloudsql/jkwordpress:europe-north1:wordpress
#         region: europe-north1

      # - uses: actions/checkout@v1
      # - name: Authenticate with google cloud
      #   uses: actions/gcloud/auth@master
      #   env:
      #     GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
      #     GCLOUD_AUTH: ${{ secrets.GCLOUD_AUTH }}
      # - name: Push to Goolge Cloud Registry
      #   uses: actions/gcloud/cli@master
      #   with:
      #     args: "components install beta --quiet && 
      #       gcloud auth configure-docker && docker build -t ${{ secrets.GCLOUD_PROJECT_ID }} . &&
      #       docker tag gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_PROJECT_ID }} && 
      #       docker push gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_PROJECT_ID }}"
      # - name: Deploy to cloud run
      #   uses: actions/gcloud/cli@master
      #   with:
      #     args: "components install beta --quiet gcloud beta run deploy ${{ secrets.CLOUD_RUN_SERVICE_NAME }} --image gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${{ secrets.GCLOUD_PROJECT_ID }} --platform managed  --region europe-north1 --project=${{ secrets.GCLOUD_PROJECT_ID }}"

          # gcloud run deploy wordpress [--region REGION] --platform managed --image gcr.io/PROJECT_NAME/IMAGE_NAME --set-env-vars DB_NAME=wordpress,DB_USER=root,DB_PASSWORD=mysecretpassword,DB_HOST=database_host --port 80

          # gcloud run deploy wordpress --region europe-north1 --platform managed --image gcr.io/jkwordpress/jkwordpress --set-env-vars DB_NAME=wordpress,DB_USER=root,DB_PASSWORD=password,DB_HOST=:/cloudsql/jkwordpress:europe-north1:wordpress --port 80